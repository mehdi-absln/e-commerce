{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nexport default {\n  name: \"MegaMenu\",\n\n  data() {\n    return {\n      productCategoriesTitle: [],\n      productCategoryCard: []\n    };\n  },\n\n  async mounted() {\n    await this.$store.dispatch('getProducts'); //  We need Dynamic Category list which is not repeated\n\n    const uniqueIds = [];\n    this.productCategoriesTitle = await this.products.filter(element => {\n      const isDuplicate = uniqueIds.includes(element.category);\n\n      if (!isDuplicate) {\n        uniqueIds.push(element.category);\n        return true;\n      }\n\n      return false;\n    });\n  },\n\n  computed: {\n    products() {\n      return this.$store.state.products;\n    },\n\n    categories() {\n      return this.$store.getters.getCategory;\n    }\n\n  },\n  methods: {\n    showData(link) {\n      console.log(this.categories(link));\n      this.productCategoryCard = this.categories(link);\n    }\n\n  }\n};","map":{"version":3,"mappings":";AAqBA;EACAA,gBADA;;EAEAC;IACA;MACAC,0BADA;MAEAC;IAFA;EAIA,CAPA;;EAQA;IACA,0CADA,CAEA;;IACA;IACA;MACA;;MACA;QACAC;QACA;MACA;;MACA;IACA,CAPA;EAQA,CApBA;;EAqBAC;IACAC;MACA;IACA,CAHA;;IAIAC;MACA;IACA;;EANA,CArBA;EA6BAC;IACAC;MACAC;MACA;IACA;;EAJA;AA7BA","names":["name","data","productCategoriesTitle","productCategoryCard","uniqueIds","computed","products","categories","methods","showData","console"],"sourceRoot":"src/components","sources":["MegaMenu.vue"],"sourcesContent":["<template>\r\n  <div class=\"py-10 mega-menu-container w-100\">\r\n    <div class=\"container\">\r\n      <div class=\"d-flex w-100\">\r\n        <div style=\"width: 30%\">\r\n          <p v-for=\"(link,index) in productCategoriesTitle\" :key=\"link + index\" @mouseover=\"showData(link.category)\"\r\n                       class=\"pt-10 cursor-pointer d-block mega-menu-category-link\">\r\n            {{link.category}}\r\n          </p>\r\n        </div>\r\n      <div class=\"mr-5\">\r\n        <div v-for=\"card in productCategoryCard\" :key=\"card.id\">\r\n        {{card.title}}\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"MegaMenu\",\r\n  data() {\r\n    return {\r\n      productCategoriesTitle: [],\r\n      productCategoryCard:[],\r\n    }\r\n  },\r\n  async mounted() {\r\n    await this.$store.dispatch('getProducts');\r\n    //  We need Dynamic Category list which is not repeated\r\n    const uniqueIds = [];\r\n     this.productCategoriesTitle =await this.products.filter(element => {\r\n      const isDuplicate = uniqueIds.includes(element.category);\r\n      if (!isDuplicate) {\r\n        uniqueIds.push(element.category);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n  },\r\n  computed: {\r\n    products() {\r\n      return this.$store.state.products\r\n    },\r\n    categories(){\r\n      return this.$store.getters.getCategory;\r\n    }\r\n  },\r\n  methods: {\r\n    showData(link) {\r\n      console.log(this.categories(link))\r\n      this.productCategoryCard = this.categories(link)\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../assets/scss/variable\";\r\n\r\n.mega-menu-category-link {\r\n  color: black;\r\n  font-weight: 300;\r\n\r\n  &:first-child {\r\n    padding: 0 !important;\r\n  }\r\n\r\n  &:hover {\r\n    color: $purple;\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}