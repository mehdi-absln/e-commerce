{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nexport default {\n  name: \"MegaMenu\",\n  props: ['showMegaMenu'],\n\n  data() {\n    return {\n      productCategoriesTitle: [],\n      productCategoryCard: []\n    };\n  },\n\n  async mounted() {\n    await this.$store.dispatch('getProducts'); //  We need Dynamic Category list which is not repeated\n\n    const uniqueIds = [];\n    this.productCategoriesTitle = await this.products.filter(element => {\n      const isDuplicate = uniqueIds.includes(element.category);\n\n      if (!isDuplicate) {\n        uniqueIds.push(element.category);\n        return true;\n      }\n\n      return false;\n    });\n  },\n\n  computed: {\n    products() {\n      return this.$store.state.products;\n    },\n\n    categories() {\n      return this.$store.getters.getCategory;\n    }\n\n  },\n  methods: {\n    showCategoryData(link) {\n      this.productCategoryCard = this.categories(link).slice(0, 4);\n    },\n\n    hideMegaMenu() {\n      console.log(this.$props.showMegaMenu);\n    }\n\n  }\n};","map":{"version":3,"mappings":";AAqDA;EACAA,gBADA;EAEAC,uBAFA;;EAGAC;IACA;MACAC,0BADA;MAEAC;IAFA;EAIA,CARA;;EASA;IACA,0CADA,CAEA;;IACA;IACA;MACA;;MACA;QACAC;QACA;MACA;;MACA;IACA,CAPA;EAQA,CArBA;;EAsBAC;IACAC;MACA;IACA,CAHA;;IAIAC;MACA;IACA;;EANA,CAtBA;EA8BAC;IACAC;MACA;IACA,CAHA;;IAIAC;MACAC;IACA;;EANA;AA9BA","names":["name","props","data","productCategoriesTitle","productCategoryCard","uniqueIds","computed","products","categories","methods","showCategoryData","hideMegaMenu","console"],"sourceRoot":"src/components","sources":["MegaMenu.vue"],"sourcesContent":["<template>\r\n  <div class=\"py-10 mega-menu-container w-100\" v-if=\"showMegaMenu\" @mouseout=\"hideMegaMenu\">\r\n    <div class=\"container\">\r\n      <v-row>\r\n        <v-col cols=\"2\">\r\n          <p v-for=\"(link,index) in productCategoriesTitle\" :key=\"link + index\" @mouseover=\"showCategoryData(link.category)\"\r\n             class=\"pt-10 cursor-pointer d-block mega-menu-category-title\">\r\n            {{ link.category }}\r\n          </p>\r\n        </v-col>\r\n        <v-col cols=\"10\" class=\"d-flex flex-wrap justify-space-around\">\r\n          <v-card v-for=\"card in productCategoryCard\" :key=\"card.id\" class=\"mega-menu-card\"\r\n                  max-width=\"200\"\r\n          >\r\n            <v-img\r\n                height=\"150\"\r\n                max-width=\"200\"\r\n                :src=\"card.image\"\r\n            ></v-img>\r\n            <v-card-title>{{ card.title }}</v-card-title>\r\n            <v-card-text>\r\n              <v-row\r\n                  align=\"center\"\r\n                  class=\"mx-0\"\r\n              >\r\n                <v-rating\r\n                    :value=\"card.rating.rate\"\r\n                    color=\"amber\"\r\n                    dense\r\n                    half-increments\r\n                    readonly\r\n                    size=\"14\"\r\n                ></v-rating>\r\n\r\n                <div class=\"grey--text ms-4\">\r\n                  4.5 (413)\r\n                </div>\r\n              </v-row>\r\n\r\n              <div class=\"my-4 text-subtitle-1\">\r\n                {{ card.category }}\r\n              </div>\r\n\r\n              <div class=\"card-description\">{{ card.description.substring(0, 40).concat('...') }}</div>\r\n            </v-card-text>\r\n          </v-card>\r\n        </v-col>\r\n      </v-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"MegaMenu\",\r\n  props:['showMegaMenu'],\r\n  data() {\r\n    return {\r\n      productCategoriesTitle: [],\r\n      productCategoryCard: [],\r\n    }\r\n  },\r\n  async mounted() {\r\n    await this.$store.dispatch('getProducts');\r\n    //  We need Dynamic Category list which is not repeated\r\n    const uniqueIds = [];\r\n    this.productCategoriesTitle = await this.products.filter(element => {\r\n      const isDuplicate = uniqueIds.includes(element.category);\r\n      if (!isDuplicate) {\r\n        uniqueIds.push(element.category);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n  },\r\n  computed: {\r\n    products() {\r\n      return this.$store.state.products\r\n    },\r\n    categories() {\r\n      return this.$store.getters.getCategory;\r\n    }\r\n  },\r\n  methods: {\r\n    showCategoryData(link) {\r\n      this.productCategoryCard = this.categories(link).slice(0,4);\r\n    },\r\n    hideMegaMenu(){\r\n      console.log(this.$props.showMegaMenu)\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../assets/scss/variable\";\r\n\r\n.mega-menu-category-title {\r\n  color: black;\r\n  font-weight: 300;\r\n\r\n  &:first-child {\r\n    padding: 0 !important;\r\n  }\r\n\r\n  &:hover {\r\n    color: $purple;\r\n  }\r\n}\r\n\r\n.mega-menu-card:first-child {\r\n  margin-top: 0 !important;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}