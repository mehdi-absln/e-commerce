{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    products: [],\n    uniqueIds: [],\n    productCategoriesTitle: []\n  },\n  getters: {\n    getCategory: state => category => {\n      return state.products.filter(product => product.category === category);\n    },\n    uniqueCategory: state => {\n      state.productCategoriesTitle = state.products.filter(element => {\n        const isDuplicate = state.uniqueIds.includes(element.category);\n\n        if (!isDuplicate) {\n          state.uniqueIds.push(element.category);\n          return true;\n        }\n\n        return false;\n      });\n    }\n  },\n  mutations: {\n    setProducts(state, products) {\n      state.products = products; // console.log(state.products);\n    }\n\n  },\n  actions: {\n    async getProducts({\n      commit\n    }) {\n      const data = await fetch('http://localhost:3000/products');\n      let products = await data.json();\n      commit('setProducts', products);\n    }\n\n  },\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","use","Store","state","products","uniqueIds","productCategoriesTitle","getters","getCategory","category","filter","product","uniqueCategory","element","isDuplicate","includes","push","mutations","setProducts","actions","getProducts","commit","data","fetch","json","modules"],"sources":["E:/Projects/e-commerce/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n    state: {\n        products: [],\n        uniqueIds: [],\n        productCategoriesTitle: [],\n    },\n    getters: {\n        getCategory: (state) => (category) => {\n            return state.products.filter(product => product.category === category)\n        },\n        uniqueCategory: (state) => {\n            state.productCategoriesTitle = state.products.filter(element => {\n                const isDuplicate = state.uniqueIds.includes(element.category);\n                if (!isDuplicate) {\n                    state.uniqueIds.push(element.category);\n                    return true;\n                }\n                return false;\n            })\n        }\n    },\n    mutations: {\n        setProducts(state, products) {\n            state.products = products;\n            // console.log(state.products);\n        },\n    },\n    actions: {\n        async getProducts({commit}) {\n            const data = await fetch('http://localhost:3000/products');\n            let products = await data.json();\n            commit('setProducts', products)\n        },\n    },\n    modules: {}\n})\n"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACE,KAAT,CAAe;EAC1BC,KAAK,EAAE;IACHC,QAAQ,EAAE,EADP;IAEHC,SAAS,EAAE,EAFR;IAGHC,sBAAsB,EAAE;EAHrB,CADmB;EAM1BC,OAAO,EAAE;IACLC,WAAW,EAAGL,KAAD,IAAYM,QAAD,IAAc;MAClC,OAAON,KAAK,CAACC,QAAN,CAAeM,MAAf,CAAsBC,OAAO,IAAIA,OAAO,CAACF,QAAR,KAAqBA,QAAtD,CAAP;IACH,CAHI;IAILG,cAAc,EAAGT,KAAD,IAAW;MACvBA,KAAK,CAACG,sBAAN,GAA+BH,KAAK,CAACC,QAAN,CAAeM,MAAf,CAAsBG,OAAO,IAAI;QAC5D,MAAMC,WAAW,GAAGX,KAAK,CAACE,SAAN,CAAgBU,QAAhB,CAAyBF,OAAO,CAACJ,QAAjC,CAApB;;QACA,IAAI,CAACK,WAAL,EAAkB;UACdX,KAAK,CAACE,SAAN,CAAgBW,IAAhB,CAAqBH,OAAO,CAACJ,QAA7B;UACA,OAAO,IAAP;QACH;;QACD,OAAO,KAAP;MACH,CAP8B,CAA/B;IAQH;EAbI,CANiB;EAqB1BQ,SAAS,EAAE;IACPC,WAAW,CAACf,KAAD,EAAQC,QAAR,EAAkB;MACzBD,KAAK,CAACC,QAAN,GAAiBA,QAAjB,CADyB,CAEzB;IACH;;EAJM,CArBe;EA2B1Be,OAAO,EAAE;IACL,MAAMC,WAAN,CAAkB;MAACC;IAAD,CAAlB,EAA4B;MACxB,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,gCAAD,CAAxB;MACA,IAAInB,QAAQ,GAAG,MAAMkB,IAAI,CAACE,IAAL,EAArB;MACAH,MAAM,CAAC,aAAD,EAAgBjB,QAAhB,CAAN;IACH;;EALI,CA3BiB;EAkC1BqB,OAAO,EAAE;AAlCiB,CAAf,CAAf"},"metadata":{},"sourceType":"module"}