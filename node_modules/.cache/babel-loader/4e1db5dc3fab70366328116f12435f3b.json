{"ast":null,"code":"export default {\n  data() {\n    return {\n      allProducts: [{\n        id: 1,\n        name: 'محصول 1',\n        category: 'الکترونیک',\n        price: 100,\n        popularity: 4\n      }, {\n        id: 2,\n        name: 'محصول 2',\n        category: 'لباس',\n        price: 50,\n        popularity: 5\n      } // ... تا محصول 20\n      ],\n      visibleProductCount: 3,\n      // تعداد محصولاتی که در ابتدا نمایش داده می‌شوند\n      sortByPrice: '',\n      // جهت مرتب سازی بر اساس هزینه (asc یا desc)\n      selectedCategory: '',\n      // دسته‌بندی انتخاب شده\n      filterByPopularity: '' // فیلتر بر اساس محبوبیت\n\n    };\n  },\n\n  computed: {\n    visibleProducts() {\n      return this.allProducts.slice(0, this.visibleProductCount);\n    },\n\n    showMoreButton() {\n      return this.visibleProductCount < this.allProducts.length;\n    },\n\n    uniqueCategories() {\n      // با استفاده از Set به منظور انتخاب دسته‌بندی‌های یکتا\n      return Array.from(new Set(this.allProducts.map(product => product.category)));\n    },\n\n    filteredProducts() {\n      let filtered = this.allProducts; // فیلتر بر اساس هزینه\n\n      if (this.sortByPrice === 'asc') {\n        filtered = filtered.sort((a, b) => a.price - b.price);\n      } else if (this.sortByPrice === 'desc') {\n        filtered = filtered.sort((a, b) => b.price - a.price);\n      } // فیلتر بر اساس دسته بندی\n\n\n      if (this.selectedCategory !== '') {\n        filtered = filtered.filter(product => product.category === this.selectedCategory);\n      } // فیلتر بر اساس محبوبیت\n\n\n      if (this.filterByPopularity !== '') {\n        filtered = filtered.sort((a, b) => a.popularity - b.popularity);\n      }\n\n      return filtered.slice(0, this.visibleProductCount);\n    }\n\n  },\n  methods: {\n    showMore() {\n      this.visibleProductCount += 3; // یا هر تعداد دلخواه دیگری\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAqDA;EACAA;IACA;MACAC,cACA;QAAAC;QAAAC;QAAAC;QAAAC;QAAAC;MAAA,CADA,EAEA;QAAAJ;QAAAC;QAAAC;QAAAC;QAAAC;MAAA,CAFA,CAGA;MAHA,CADA;MAMAC,sBANA;MAMA;MACAC,eAPA;MAOA;MACAC,oBARA;MAQA;MACAC,sBATA,CASA;;IATA;EAWA,CAbA;;EAcAC;IACAC;MACA;IACA,CAHA;;IAIAC;MACA;IACA,CANA;;IAOAC;MACA;MACA;IACA,CAVA;;IAWAC;MACA,gCADA,CAGA;;MACA;QACAC;MACA,CAFA,MAEA;QACAA;MACA,CARA,CAUA;;;MACA;QACAA;MACA,CAbA,CAeA;;;MACA;QACAA;MACA;;MAEA;IACA;;EAhCA,CAdA;EAgDAC;IACAC;MACA,8BADA,CACA;IACA;;EAHA;AAhDA","names":["data","allProducts","id","name","category","price","popularity","visibleProductCount","sortByPrice","selectedCategory","filterByPopularity","computed","visibleProducts","showMoreButton","uniqueCategories","filteredProducts","filtered","methods","showMore"],"sourceRoot":"src/views","sources":["TestView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"filters\">\r\n      <label>فیلتر بر اساس هزینه:</label>\r\n      <select v-model=\"sortByPrice\">\r\n        <option value=\"asc\">از ارزان به گران</option>\r\n        <option value=\"desc\">از گران به ارزان</option>\r\n      </select>\r\n\r\n      <label>فیلتر بر اساس دسته بندی:</label>\r\n      <div>\r\n        <input\r\n            type=\"radio\"\r\n            value=\"\"\r\n            v-model=\"selectedCategory\"\r\n            name=\"categoryFilter\"\r\n        />\r\n        <label>همه محصولات</label>\r\n      </div>\r\n      <div v-for=\"category in uniqueCategories\" :key=\"category\">\r\n        <input\r\n            type=\"radio\"\r\n            :value=\"category\"\r\n            v-model=\"selectedCategory\"\r\n            name=\"categoryFilter\"\r\n        />\r\n        <label>{{ category }}</label>\r\n      </div>\r\n\r\n      <label>فیلتر بر اساس محبوبیت:</label>\r\n      <select v-model=\"filterByPopularity\">\r\n        <option value=\"\">همه محبوبیت‌ها</option>\r\n        <option value=\"1\">پایین</option>\r\n        <option value=\"2\">متوسط</option>\r\n        <option value=\"3\">بالا</option>\r\n        <!-- اضافه کردن گزینه‌های دیگر -->\r\n      </select>\r\n    </div>\r\n\r\n    <div v-for=\"(product, index) in filteredProducts\" :key=\"index\">\r\n      <!-- نمایش اطلاعات محصولات -->\r\n      <div class=\"product-card\">\r\n        <h3>{{ product.name }}</h3>\r\n        <p>دسته بندی: {{ product.category }}</p>\r\n        <p>هزینه: {{ product.price }}</p>\r\n        <p>محبوبیت: {{ product.popularity }}</p>\r\n      </div>\r\n    </div>\r\n    <button v-if=\"showMoreButton\" @click=\"showMore\" class=\"show-more-button\">نمایش بیشتر</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      allProducts: [\r\n        { id: 1, name: 'محصول 1', category: 'الکترونیک', price: 100, popularity: 4 },\r\n        { id: 2, name: 'محصول 2', category: 'لباس', price: 50, popularity: 5 },\r\n        // ... تا محصول 20\r\n      ],\r\n      visibleProductCount: 3, // تعداد محصولاتی که در ابتدا نمایش داده می‌شوند\r\n      sortByPrice: '', // جهت مرتب سازی بر اساس هزینه (asc یا desc)\r\n      selectedCategory: '', // دسته‌بندی انتخاب شده\r\n      filterByPopularity: '', // فیلتر بر اساس محبوبیت\r\n    };\r\n  },\r\n  computed: {\r\n    visibleProducts() {\r\n      return this.allProducts.slice(0, this.visibleProductCount);\r\n    },\r\n    showMoreButton() {\r\n      return this.visibleProductCount < this.allProducts.length;\r\n    },\r\n    uniqueCategories() {\r\n      // با استفاده از Set به منظور انتخاب دسته‌بندی‌های یکتا\r\n      return Array.from(new Set(this.allProducts.map(product => product.category)));\r\n    },\r\n    filteredProducts() {\r\n      let filtered = this.allProducts;\r\n\r\n      // فیلتر بر اساس هزینه\r\n      if (this.sortByPrice === 'asc') {\r\n        filtered = filtered.sort((a, b) => a.price - b.price);\r\n      } else if (this.sortByPrice === 'desc') {\r\n        filtered = filtered.sort((a, b) => b.price - a.price);\r\n      }\r\n\r\n      // فیلتر بر اساس دسته بندی\r\n      if (this.selectedCategory !== '') {\r\n        filtered = filtered.filter(product => product.category === this.selectedCategory);\r\n      }\r\n\r\n      // فیلتر بر اساس محبوبیت\r\n      if (this.filterByPopularity !== '') {\r\n        filtered = filtered.sort((a, b) => a.popularity - b.popularity);\r\n      }\r\n\r\n      return filtered.slice(0, this.visibleProductCount);\r\n    },\r\n  },\r\n  methods: {\r\n    showMore() {\r\n      this.visibleProductCount += 3; // یا هر تعداد دلخواه دیگری\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.product-card {\r\n  border: 1px solid #ccc;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.show-more-button {\r\n  background-color: #3498db;\r\n  color: #ffffff;\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.show-more-button:hover {\r\n  background-color: #2980b9;\r\n}\r\n\r\n.filters {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filters label {\r\n  margin-right: 10px;\r\n}\r\n\r\n.filters div {\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.filters input {\r\n  margin-right: 5px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}