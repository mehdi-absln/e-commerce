{"ast":null,"code":"// Extensions\nimport { Service } from '../service'; // Utilities\n\nimport { getObjectValueByPath } from '../../util/helpers';\nimport { consoleError, consoleWarn } from '../../util/console';\nconst LANG_PREFIX = '$vuetify.';\nconst fallback = Symbol('Lang fallback');\n\nfunction getTranslation(locale, key, usingDefault = false, defaultLocale) {\n  const shortKey = key.replace(LANG_PREFIX, '');\n  let translation = getObjectValueByPath(locale, shortKey, fallback);\n\n  if (translation === fallback) {\n    if (usingDefault) {\n      consoleError(`Translation key \"${shortKey}\" not found in fallback`);\n      translation = key;\n    } else {\n      consoleWarn(`Translation key \"${shortKey}\" not found, falling back to default`);\n      translation = getTranslation(defaultLocale, key, true, defaultLocale);\n    }\n  }\n\n  return translation;\n}\n\nexport class Lang extends Service {\n  constructor(preset) {\n    super();\n    this.defaultLocale = 'en';\n    const {\n      current,\n      locales,\n      t\n    } = preset[Lang.property];\n    this.current = current;\n    this.locales = locales;\n    this.translator = t || this.defaultTranslator;\n  }\n\n  currentLocale(key) {\n    const translation = this.locales[this.current];\n    const defaultLocale = this.locales[this.defaultLocale];\n    return getTranslation(translation, key, false, defaultLocale);\n  }\n\n  t(key, ...params) {\n    if (!key.startsWith(LANG_PREFIX)) return this.replace(key, params);\n    return this.translator(key, ...params);\n  }\n\n  defaultTranslator(key, ...params) {\n    return this.replace(this.currentLocale(key), params);\n  }\n\n  replace(str, params) {\n    return str.replace(/\\{(\\d+)\\}/g, (match, index) => {\n      /* istanbul ignore next */\n      return String(params[+index]);\n    });\n  }\n\n}\nLang.property = 'lang';","map":{"version":3,"names":["Service","getObjectValueByPath","consoleError","consoleWarn","LANG_PREFIX","fallback","Symbol","getTranslation","locale","key","usingDefault","defaultLocale","shortKey","replace","translation","Lang","constructor","preset","current","locales","t","property","translator","defaultTranslator","currentLocale","params","startsWith","str","match","index","String"],"sources":["E:/Projects/e-commerce/node_modules/vuetify/lib/services/lang/index.js"],"sourcesContent":["// Extensions\nimport { Service } from '../service'; // Utilities\n\nimport { getObjectValueByPath } from '../../util/helpers';\nimport { consoleError, consoleWarn } from '../../util/console';\nconst LANG_PREFIX = '$vuetify.';\nconst fallback = Symbol('Lang fallback');\n\nfunction getTranslation(locale, key, usingDefault = false, defaultLocale) {\n  const shortKey = key.replace(LANG_PREFIX, '');\n  let translation = getObjectValueByPath(locale, shortKey, fallback);\n\n  if (translation === fallback) {\n    if (usingDefault) {\n      consoleError(`Translation key \"${shortKey}\" not found in fallback`);\n      translation = key;\n    } else {\n      consoleWarn(`Translation key \"${shortKey}\" not found, falling back to default`);\n      translation = getTranslation(defaultLocale, key, true, defaultLocale);\n    }\n  }\n\n  return translation;\n}\n\nexport class Lang extends Service {\n  constructor(preset) {\n    super();\n    this.defaultLocale = 'en';\n    const {\n      current,\n      locales,\n      t\n    } = preset[Lang.property];\n    this.current = current;\n    this.locales = locales;\n    this.translator = t || this.defaultTranslator;\n  }\n\n  currentLocale(key) {\n    const translation = this.locales[this.current];\n    const defaultLocale = this.locales[this.defaultLocale];\n    return getTranslation(translation, key, false, defaultLocale);\n  }\n\n  t(key, ...params) {\n    if (!key.startsWith(LANG_PREFIX)) return this.replace(key, params);\n    return this.translator(key, ...params);\n  }\n\n  defaultTranslator(key, ...params) {\n    return this.replace(this.currentLocale(key), params);\n  }\n\n  replace(str, params) {\n    return str.replace(/\\{(\\d+)\\}/g, (match, index) => {\n      /* istanbul ignore next */\n      return String(params[+index]);\n    });\n  }\n\n}\nLang.property = 'lang';\n//# sourceMappingURL=index.js.map"],"mappings":"AAAA;AACA,SAASA,OAAT,QAAwB,YAAxB,C,CAAsC;;AAEtC,SAASC,oBAAT,QAAqC,oBAArC;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,oBAA1C;AACA,MAAMC,WAAW,GAAG,WAApB;AACA,MAAMC,QAAQ,GAAGC,MAAM,CAAC,eAAD,CAAvB;;AAEA,SAASC,cAAT,CAAwBC,MAAxB,EAAgCC,GAAhC,EAAqCC,YAAY,GAAG,KAApD,EAA2DC,aAA3D,EAA0E;EACxE,MAAMC,QAAQ,GAAGH,GAAG,CAACI,OAAJ,CAAYT,WAAZ,EAAyB,EAAzB,CAAjB;EACA,IAAIU,WAAW,GAAGb,oBAAoB,CAACO,MAAD,EAASI,QAAT,EAAmBP,QAAnB,CAAtC;;EAEA,IAAIS,WAAW,KAAKT,QAApB,EAA8B;IAC5B,IAAIK,YAAJ,EAAkB;MAChBR,YAAY,CAAE,oBAAmBU,QAAS,yBAA9B,CAAZ;MACAE,WAAW,GAAGL,GAAd;IACD,CAHD,MAGO;MACLN,WAAW,CAAE,oBAAmBS,QAAS,sCAA9B,CAAX;MACAE,WAAW,GAAGP,cAAc,CAACI,aAAD,EAAgBF,GAAhB,EAAqB,IAArB,EAA2BE,aAA3B,CAA5B;IACD;EACF;;EAED,OAAOG,WAAP;AACD;;AAED,OAAO,MAAMC,IAAN,SAAmBf,OAAnB,CAA2B;EAChCgB,WAAW,CAACC,MAAD,EAAS;IAClB;IACA,KAAKN,aAAL,GAAqB,IAArB;IACA,MAAM;MACJO,OADI;MAEJC,OAFI;MAGJC;IAHI,IAIFH,MAAM,CAACF,IAAI,CAACM,QAAN,CAJV;IAKA,KAAKH,OAAL,GAAeA,OAAf;IACA,KAAKC,OAAL,GAAeA,OAAf;IACA,KAAKG,UAAL,GAAkBF,CAAC,IAAI,KAAKG,iBAA5B;EACD;;EAEDC,aAAa,CAACf,GAAD,EAAM;IACjB,MAAMK,WAAW,GAAG,KAAKK,OAAL,CAAa,KAAKD,OAAlB,CAApB;IACA,MAAMP,aAAa,GAAG,KAAKQ,OAAL,CAAa,KAAKR,aAAlB,CAAtB;IACA,OAAOJ,cAAc,CAACO,WAAD,EAAcL,GAAd,EAAmB,KAAnB,EAA0BE,aAA1B,CAArB;EACD;;EAEDS,CAAC,CAACX,GAAD,EAAM,GAAGgB,MAAT,EAAiB;IAChB,IAAI,CAAChB,GAAG,CAACiB,UAAJ,CAAetB,WAAf,CAAL,EAAkC,OAAO,KAAKS,OAAL,CAAaJ,GAAb,EAAkBgB,MAAlB,CAAP;IAClC,OAAO,KAAKH,UAAL,CAAgBb,GAAhB,EAAqB,GAAGgB,MAAxB,CAAP;EACD;;EAEDF,iBAAiB,CAACd,GAAD,EAAM,GAAGgB,MAAT,EAAiB;IAChC,OAAO,KAAKZ,OAAL,CAAa,KAAKW,aAAL,CAAmBf,GAAnB,CAAb,EAAsCgB,MAAtC,CAAP;EACD;;EAEDZ,OAAO,CAACc,GAAD,EAAMF,MAAN,EAAc;IACnB,OAAOE,GAAG,CAACd,OAAJ,CAAY,YAAZ,EAA0B,CAACe,KAAD,EAAQC,KAAR,KAAkB;MACjD;MACA,OAAOC,MAAM,CAACL,MAAM,CAAC,CAACI,KAAF,CAAP,CAAb;IACD,CAHM,CAAP;EAID;;AAlC+B;AAqClCd,IAAI,CAACM,QAAL,GAAgB,MAAhB"},"metadata":{},"sourceType":"module"}