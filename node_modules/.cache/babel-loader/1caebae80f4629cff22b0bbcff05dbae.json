{"ast":null,"code":"import \"../../../src/components/VCheckbox/VSimpleCheckbox.sass\";\nimport ripple from '../../directives/ripple';\nimport Vue from 'vue';\nimport { VIcon } from '../VIcon'; // Mixins\n\nimport Colorable from '../../mixins/colorable';\nimport Themeable from '../../mixins/themeable'; // Utilities\n\nimport mergeData from '../../util/mergeData';\nimport { wrapInArray } from '../../util/helpers';\nexport default Vue.extend({\n  name: 'v-simple-checkbox',\n  functional: true,\n  directives: {\n    ripple\n  },\n  props: { ...Colorable.options.props,\n    ...Themeable.options.props,\n    disabled: Boolean,\n    ripple: {\n      type: Boolean,\n      default: true\n    },\n    value: Boolean,\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate'\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn'\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff'\n    }\n  },\n\n  render(h, {\n    props,\n    data,\n    listeners\n  }) {\n    const children = [];\n    let icon = props.offIcon;\n    if (props.indeterminate) icon = props.indeterminateIcon;else if (props.value) icon = props.onIcon;\n    children.push(h(VIcon, Colorable.options.methods.setTextColor(props.value && props.color, {\n      props: {\n        disabled: props.disabled,\n        dark: props.dark,\n        light: props.light\n      }\n    }), icon));\n\n    if (props.ripple && !props.disabled) {\n      const ripple = h('div', Colorable.options.methods.setTextColor(props.color, {\n        staticClass: 'v-input--selection-controls__ripple',\n        directives: [{\n          name: 'ripple',\n          value: {\n            center: true\n          }\n        }]\n      }));\n      children.push(ripple);\n    }\n\n    return h('div', mergeData(data, {\n      class: {\n        'v-simple-checkbox': true,\n        'v-simple-checkbox--disabled': props.disabled\n      },\n      on: {\n        click: e => {\n          e.stopPropagation();\n\n          if (data.on && data.on.input && !props.disabled) {\n            wrapInArray(data.on.input).forEach(f => f(!props.value));\n          }\n        }\n      }\n    }), [h('div', {\n      staticClass: 'v-input--selection-controls__input'\n    }, children)]);\n  }\n\n});","map":{"version":3,"mappings":"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","names":["ripple","Vue","VIcon","Colorable","Themeable","mergeData","wrapInArray","extend","name","functional","directives","props","options","disabled","Boolean","type","default","value","indeterminate","indeterminateIcon","String","onIcon","offIcon","render","h","data","listeners","children","icon","push","methods","setTextColor","color","dark","light","staticClass","center","class","on","click","e","stopPropagation","input","forEach","f"],"sourceRoot":"","sources":["../../../src/components/VCheckbox/VSimpleCheckbox.ts"],"sourcesContent":["import './VSimpleCheckbox.sass'\n\nimport ripple from '../../directives/ripple'\n\nimport Vue, { VNode, VNodeDirective } from 'vue'\nimport { VIcon } from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { wrapInArray } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'v-simple-checkbox',\n\n  functional: true,\n\n  directives: {\n    ripple,\n  },\n\n  props: {\n    ...Colorable.options.props,\n    ...Themeable.options.props,\n    disabled: Boolean,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    value: Boolean,\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n  },\n\n  render (h, { props, data, listeners }): VNode {\n    const children = []\n    let icon = props.offIcon\n    if (props.indeterminate) icon = props.indeterminateIcon\n    else if (props.value) icon = props.onIcon\n\n    children.push(h(VIcon, Colorable.options.methods.setTextColor(props.value && props.color, {\n      props: {\n        disabled: props.disabled,\n        dark: props.dark,\n        light: props.light,\n      },\n    }), icon))\n\n    if (props.ripple && !props.disabled) {\n      const ripple = h('div', Colorable.options.methods.setTextColor(props.color, {\n        staticClass: 'v-input--selection-controls__ripple',\n        directives: [{\n          name: 'ripple',\n          value: { center: true },\n        }] as VNodeDirective[],\n      }))\n\n      children.push(ripple)\n    }\n\n    return h('div',\n      mergeData(data, {\n        class: {\n          'v-simple-checkbox': true,\n          'v-simple-checkbox--disabled': props.disabled,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (data.on && data.on.input && !props.disabled) {\n              wrapInArray(data.on.input).forEach(f => f(!props.value))\n            }\n          },\n        },\n      }), [\n        h('div', { staticClass: 'v-input--selection-controls__input' }, children),\n      ])\n  },\n})\n"]},"metadata":{},"sourceType":"module"}